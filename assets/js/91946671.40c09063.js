"use strict";(self.webpackChunkpumped_fn_docs=self.webpackChunkpumped_fn_docs||[]).push([[514],{7408:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/pumped-fn/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installation","href":"/pumped-fn/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quick Start","href":"/pumped-fn/docs/getting-started/quick-start","docId":"getting-started/quick-start","unlisted":false},{"type":"link","label":"Your First App","href":"/pumped-fn/docs/getting-started/first-app","docId":"getting-started/first-app","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Core Concepts","items":[{"type":"link","label":"Executors","href":"/pumped-fn/docs/core-concepts/executors","docId":"core-concepts/executors","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"React Integration","items":[{"type":"link","label":"React Integration Overview","href":"/pumped-fn/docs/react/overview","docId":"react/overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Testing","items":[{"type":"link","label":"Testing Overview","href":"/pumped-fn/docs/testing/overview","docId":"testing/overview","unlisted":false},{"type":"link","label":"Testing Executors","href":"/pumped-fn/docs/testing/testing-executors","docId":"testing/testing-executors","unlisted":false},{"type":"link","label":"Testing React Components","href":"/pumped-fn/docs/testing/testing-react","docId":"testing/testing-react","unlisted":false},{"type":"link","label":"Testing Utilities","href":"/pumped-fn/docs/testing/testing-utilities","docId":"testing/testing-utilities","unlisted":false},{"type":"link","label":"Interactive Testing Examples","href":"/pumped-fn/docs/testing/interactive-testing","docId":"testing/interactive-testing","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Examples","items":[{"type":"link","label":"Counter Example","href":"/pumped-fn/docs/examples/counter","docId":"examples/counter","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"core-concepts/executors":{"id":"core-concepts/executors","title":"Executors","description":"Executors are the fundamental building blocks of Pumped Fn. They encapsulate state, computations, and side effects in a composable, type-safe way.","sidebar":"tutorialSidebar"},"examples/counter":{"id":"examples/counter","title":"Counter Example","description":"This example demonstrates the core concepts of Pumped Fn with a reactive counter that includes configuration, timers, and derived state.","sidebar":"tutorialSidebar"},"getting-started/first-app":{"id":"getting-started/first-app","title":"Your First App","description":"Let\'s build a complete todo application to demonstrate more advanced Pumped Fn concepts. This will show you how to handle complex state interactions, form handling, and list management.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Package Overview","sidebar":"tutorialSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Quick Start","description":"Let\'s build a simple counter application to demonstrate the core concepts of Pumped Fn.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Pumped Fn is a functional reactive state management library designed specifically for React applications. It provides a clean, type-safe way to manage complex state with automatic reactivity and powerful composition patterns.","sidebar":"tutorialSidebar"},"react/overview":{"id":"react/overview","title":"React Integration Overview","description":"Pumped Fn provides seamless React integration through the @pumped-fn/react package. This package includes hooks, components, and utilities that make working with Pumped Fn state in React applications intuitive and performant.","sidebar":"tutorialSidebar"},"testing/interactive-testing":{"id":"testing/interactive-testing","title":"Interactive Testing Examples","description":"This page provides live, interactive examples of how to test Pumped Fn applications using the preset approach. You can run these examples right in your browser to see how preset-based testing works.","sidebar":"tutorialSidebar"},"testing/overview":{"id":"testing/overview","title":"Testing Overview","description":"Testing applications built with Pumped Fn is straightforward and powerful thanks to the built-in preset feature. Instead of complex mocking, you can easily simulate different application states by presetting executor values and observing how your derived state and components behave.","sidebar":"tutorialSidebar"},"testing/testing-executors":{"id":"testing/testing-executors","title":"Testing Executors","description":"This guide covers comprehensive testing strategies for Pumped Fn executors, including basic state, derived state, and complex interactions.","sidebar":"tutorialSidebar"},"testing/testing-react":{"id":"testing/testing-react","title":"Testing React Components","description":"This guide covers testing React components that use Pumped Fn state management, including hooks, components, and complex interactions.","sidebar":"tutorialSidebar"},"testing/testing-utilities":{"id":"testing/testing-utilities","title":"Testing Utilities","description":"This guide covers helpful utilities, patterns, and helper functions that make testing Pumped Fn applications easier and more maintainable.","sidebar":"tutorialSidebar"}}}}')}}]);